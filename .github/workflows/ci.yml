name: Pipeline de CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    environment: pipeline

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ secrets.NODE_VERSION }}'

      - name: Cache de dependências do NPM
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Instalar dependências
        run: npm install

      - name: Executar testes
        run: npm test

      - name: Verificar vulnerabilidades
        run: npm audit

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ secrets.NODE_VERSION }}'

      - name: Instalar dependências
        run: npm install

      - name: Executar linter
        run: npm run lint

  format:
    runs-on: ubuntu-latest

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ secrets.NODE_VERSION }}'

      - name: Instalar dependências
        run: npm install

      - name: Executar formatter
        run: npm run format
